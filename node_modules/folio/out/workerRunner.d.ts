/**
 * Copyright Microsoft Corporation. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
import { EventEmitter } from 'events';
import { RunPayload, WorkerInitParams } from './ipc';
export declare class WorkerRunner extends EventEmitter {
    private _params;
    private _loader;
    private _runList;
    private _outputPathSegment;
    private _workerInfo;
    private _envInitialized;
    private _failedTestId;
    private _fatalError;
    private _entries;
    private _remaining;
    private _isStopped;
    _testId: string | null;
    private _testInfo;
    private _file;
    private _config;
    constructor(params: WorkerInitParams);
    stop(): void;
    cleanup(): Promise<void>;
    unhandledError(error: Error | any): void;
    private _deadline;
    private _loadIfNeeded;
    run(runPayload: RunPayload): Promise<void>;
    private _runSuite;
    private _runSpec;
    private _setCurrentTestInfo;
    private _runEnvBeforeEach;
    private _runTestWithBeforeHooks;
    private _runAfterHooks;
    private _runHooks;
    private _reportDone;
    private _reportDoneAndStop;
    private _hasTestsToRun;
}
//# sourceMappingURL=workerRunner.d.ts.map